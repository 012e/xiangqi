/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';

import type {
  GameTypeResponse
} from '.././model';


export const getGetResponseMock = (): GameTypeResponse[] => (Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({})))


export const getGetMockHandler = (overrideResponse?: GameTypeResponse[] | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GameTypeResponse[]> | GameTypeResponse[])) => {
  return http.get('*/game-types/', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getGameTypeControllerMock = () => [
  getGetMockHandler()
]
